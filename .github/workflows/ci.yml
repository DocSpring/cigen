name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    container:
      image: rust:1.88.0
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install rustfmt and clippy
        run: |
          rustup component add rustfmt clippy

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: .nx
          key: ${{ runner.os }}-nx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Cache cargo dependencies and build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install pnpm dependencies
        run: pnpm install --frozen-lockfile

      - name: Add node_modules/.bin to PATH
        run: echo "$PWD/node_modules/.bin" >> "$GITHUB_PATH"

      - name: Verify Nx installation
        run: nx --version

      - name: Download cargo dependencies
        run: cargo fetch --locked

      - name: Check formatting
        run: nx run cigen:format -- -- --check

      - name: Run linting
        run: nx run cigen:lint

      - name: Run tests
        run: nx run cigen:test

      - name: Build
        run: nx run cigen:build

      - name: Run integration tests
        run: nx run cigen:integration
