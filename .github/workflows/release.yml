# DO NOT EDIT - This file is generated by cigen
# Source: .cigen/workflows/
# Regenerate with: cargo run -- generate --file .cigen
#
on:
  push:
    tags:
      - v*
  workflow_dispatch: {}
permissions:
  contents: write
name: RELEASE
jobs:
  docker_image:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs:
      - release_create
    env:
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
      - name: Prepare Node runtime for actions
        if: ${{ env.ACT == 'true' }}
        run: |
          set -e
          if ! command -v node >/dev/null 2>&1 || ! command -v protoc >/dev/null 2>&1; then
            apt-get update
            apt-get install -y nodejs npm protobuf-compiler
          fi
      - name: Install protobuf compiler
        if: runner.os == 'Linux'
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download cigen binary
        uses: actions/download-artifact@v4
        with:
          name: cigen-bin
          path: .cigen/bin
      - name: Prepare cigen binary
        run: |
          set -e
          mkdir -p .cigen/bin
          chmod +x .cigen/bin/cigen
      - name: Compute source hash
        id: compute_hash
        run: |
          set -euo pipefail
          mkdir -p .cigen/skip-cache
          mkdir -p .cigen/cache
          ./.cigen/bin/cigen hash \
            --job docker_image \
            --config .cigen \
            --base-dir . \
            --output job_hash \
            --cache .cigen/cache/file-hashes.json
      - name: Restore skip cache
        id: job_skip_cache
        uses: actions/cache@v4
        with:
          path: .cigen/skip-cache/docker_image
          key: job-skip-${ runner.os }-docker_image-${ steps.compute_hash.outputs.job_hash }
          restore-keys: job-skip-${ runner.os }-docker_image-
        if: ${{ env.ACT != 'true' }}
      - name: Skip job (cached)
        if: steps.job_skip_cache.outputs.cache-hit == 'true'
        run: echo 'Job cache hit; skipping remaining steps.' && exit 0
      - run: |
          VERSION=$(grep -E '^version = ' Cargo.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
          echo "DOCKER_IMAGE_VERSION=$VERSION" >> "$GITHUB_ENV"
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - uses: docker/setup-qemu-action@v3
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - uses: docker/setup-buildx-action@v3
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - uses: docker/login-action@v3
        with:
          password: ${{ env.DOCKERHUB_TOKEN }}
          username: ${{ env.DOCKERHUB_USERNAME }}
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - name: Build and push multi-arch image
        run: |
          set -euo pipefail
          VERSION="${{ env.DOCKER_IMAGE_VERSION }}"
          echo "Building docspringcom/cigen:${VERSION} and :latest"
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -f Dockerfile \
            --build-arg CIGEN_VERSION="${VERSION}" \
            -t docspringcom/cigen:"${VERSION}" \
            -t docspringcom/cigen:latest \
            --push .
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - name: Record job completion
        if: success() && steps.job_skip_cache.outputs.cache-hit != 'true'
        run: |
          set -e
          HASH="${JOB_HASH}"
          if [ -z "$HASH" ]; then
            echo 'JOB_HASH missing' >&2
            exit 1
          fi
          MARKER=.cigen/skip-cache/docker_image/$HASH
          mkdir -p "$(dirname "$MARKER")"
          date > "$MARKER"
        env:
          JOB_HASH: ${{ steps.compute_hash.outputs.job_hash }}
  release_build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            name: cigen-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            name: cigen-macos-arm64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: cigen-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            name: cigen-linux-arm64
            use-cross: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Prepare Node runtime for actions
        if: ${{ env.ACT == 'true' }}
        run: |
          set -e
          if ! command -v node >/dev/null 2>&1 || ! command -v protoc >/dev/null 2>&1; then
            apt-get update
            apt-get install -y nodejs npm protobuf-compiler
          fi
      - name: Install protobuf compiler
        if: runner.os == 'Linux'
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Download cigen binary
        uses: actions/download-artifact@v4
        with:
          name: cigen-bin
          path: .cigen/bin
      - name: Prepare cigen binary
        run: |
          set -e
          mkdir -p .cigen/bin
          chmod +x .cigen/bin/cigen
      - name: Compute source hash
        id: compute_hash
        run: |
          set -euo pipefail
          mkdir -p .cigen/skip-cache
          mkdir -p .cigen/cache
          ./.cigen/bin/cigen hash \
            --job release_build \
            --config .cigen \
            --base-dir . \
            --output job_hash \
            --cache .cigen/cache/file-hashes.json
      - name: Restore skip cache
        id: job_skip_cache
        uses: actions/cache@v4
        with:
          path: .cigen/skip-cache/release_build
          key: job-skip-${ runner.os }-release_build-${ steps.compute_hash.outputs.job_hash }
          restore-keys: job-skip-${ runner.os }-release_build-
        if: ${{ env.ACT != 'true' }}
      - name: Skip job (cached)
        if: steps.job_skip_cache.outputs.cache-hit == 'true'
        run: echo 'Job cache hit; skipping remaining steps.' && exit 0
      - uses: actions/github-script@v7
        with:
          script: |
            const script = require('./.github/wait-for-checks.js');
            await script({ github, context, core });
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - name: Install Linux build dependencies
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - run: cargo install cross --git https://github.com/cross-rs/cross
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - name: Build binary
        run: |
          set -e
          if [ "${{ matrix.use-cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.target }} --bin cigen
          else
            cargo build --release --target ${{ matrix.target }} --bin cigen
          fi
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - name: Create archive
        run: |
          set -e
          cd "target/${{ matrix.target }}/release"
          tar czf "../../../${{ matrix.name }}.tar.gz" cigen
          cd ../../../
          echo "ASSET_PATH=${{ matrix.name }}.tar.gz" >> "$GITHUB_ENV"
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - uses: actions/upload-artifact@v4
        with:
          path: ${{ env.ASSET_PATH }}
          name: ${{ matrix.name }}
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - name: Record job completion
        if: success() && steps.job_skip_cache.outputs.cache-hit != 'true'
        run: |
          set -e
          HASH="${JOB_HASH}"
          if [ -z "$HASH" ]; then
            echo 'JOB_HASH missing' >&2
            exit 1
          fi
          MARKER=.cigen/skip-cache/release_build/$HASH
          mkdir -p "$(dirname "$MARKER")"
          date > "$MARKER"
        env:
          JOB_HASH: ${{ steps.compute_hash.outputs.job_hash }}
  release_create:
    runs-on: ubuntu-latest
    needs:
      - release_build
    steps:
      - name: Prepare Node runtime for actions
        if: ${{ env.ACT == 'true' }}
        run: |
          set -e
          if ! command -v node >/dev/null 2>&1 || ! command -v protoc >/dev/null 2>&1; then
            apt-get update
            apt-get install -y nodejs npm protobuf-compiler
          fi
      - name: Install protobuf compiler
        if: runner.os == 'Linux'
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      - name: Download cigen binary
        uses: actions/download-artifact@v4
        with:
          name: cigen-bin
          path: .cigen/bin
      - name: Prepare cigen binary
        run: |
          set -e
          mkdir -p .cigen/bin
          chmod +x .cigen/bin/cigen
      - name: Compute source hash
        id: compute_hash
        run: |
          set -euo pipefail
          mkdir -p .cigen/skip-cache
          mkdir -p .cigen/cache
          ./.cigen/bin/cigen hash \
            --job release_create \
            --config .cigen \
            --base-dir . \
            --output job_hash \
            --cache .cigen/cache/file-hashes.json
      - name: Restore skip cache
        id: job_skip_cache
        uses: actions/cache@v4
        with:
          path: .cigen/skip-cache/release_create
          key: job-skip-${ runner.os }-release_create-${ steps.compute_hash.outputs.job_hash }
          restore-keys: job-skip-${ runner.os }-release_create-
        if: ${{ env.ACT != 'true' }}
      - name: Skip job (cached)
        if: steps.job_skip_cache.outputs.cache-hit == 'true'
        run: echo 'Job cache hit; skipping remaining steps.' && exit 0
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - run: |
          VERSION=$(grep -E '^version = ' Cargo.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
          if [ "${{ github.event_name }}" = "push" ]; then
            TAG="${GITHUB_REF#refs/tags/}"
            EXPECTED_TAG="v$VERSION"
            if [ "$TAG" != "$EXPECTED_TAG" ]; then
              echo "Error: Tag $TAG doesn't match expected $EXPECTED_TAG from Cargo.toml" >&2
              exit 1
            fi
            echo "RELEASE_TAG=$TAG" >> "$GITHUB_ENV"
          else
            echo "RELEASE_TAG=v$VERSION" >> "$GITHUB_ENV"
          fi
          echo "RELEASE_VERSION=$VERSION" >> "$GITHUB_ENV"
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - name: Generate checksums
        run: |
          set -e
          cd artifacts
          for dir in */; do
            cd "$dir"
            for file in *; do
              case "$file" in
                *.tar.gz|*.zip)
                  if [ -f "$file" ]; then
                    sha256sum "$file" > "${file}.sha256" || shasum -a 256 "$file" | awk '{print $1}' > "${file}.sha256"
                  fi
                  ;;
              esac
            done
            cd ..
          done
          cd ..
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - name: Generate changelog
        run: |
          cat > changelog.md <<EOF
          ## Installation

          ### One-liner (Linux/macOS)
              curl -fsSL https://docspring.github.io/cigen/install.sh | sh

          ### Direct downloads
          - macOS (Intel): https://github.com/${{ github.repository }}/releases/download/${{ env.RELEASE_TAG }}/cigen-macos-amd64.tar.gz
          - macOS (Apple Silicon): https://github.com/${{ github.repository }}/releases/download/${{ env.RELEASE_TAG }}/cigen-macos-arm64.tar.gz
          - Linux (x86_64): https://github.com/${{ github.repository }}/releases/download/${{ env.RELEASE_TAG }}/cigen-linux-amd64.tar.gz
          - Linux (ARM64): https://github.com/${{ github.repository }}/releases/download/${{ env.RELEASE_TAG }}/cigen-linux-arm64.tar.gz
          EOF
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ contains(env.RELEASE_TAG, '-') }}
          body_path: changelog.md
          name: CIGen v${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.RELEASE_TAG }}
          draft: false
          files: |
            artifacts/**/*.tar.gz
            artifacts/**/*.sha256
        if: steps.job_skip_cache.outputs.cache-hit != 'true'
      - name: Record job completion
        if: success() && steps.job_skip_cache.outputs.cache-hit != 'true'
        run: |
          set -e
          HASH="${JOB_HASH}"
          if [ -z "$HASH" ]; then
            echo 'JOB_HASH missing' >&2
            exit 1
          fi
          MARKER=.cigen/skip-cache/release_create/$HASH
          mkdir -p "$(dirname "$MARKER")"
          date > "$MARKER"
        env:
          JOB_HASH: ${{ steps.compute_hash.outputs.job_hash }}
