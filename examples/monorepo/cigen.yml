# Monorepo Example (Turborepo-style)
# Demonstrates selective job execution based on affected projects

project:
  name: monorepo
  type: turborepo # Uses workspace graph for affected detection (future)

# Global packages available to all jobs
packages:
  - node

# Job definitions
jobs:
  # Lint all affected projects
  lint:
    steps:
      - run: pnpm turbo run lint --filter="..." --parallel=3

  # Test all affected projects
  test:
    needs:
      - lint
    matrix:
      node:
        - "18"
        - "20"
    steps:
      - run: pnpm turbo run test --filter="..." --parallel=3
    skip_if:
      # Skip if no source files changed in any project
      paths_unmodified:
        - apps/**
        - libs/**
        - "!**/*.md"
        - "!**/*.txt"

  # Build all affected projects
  build:
    needs:
      - test
    steps:
      - run: pnpm turbo run build --filter="..." --parallel=3
    artifacts:
      - path: dist/**
        retention: 7d

  # E2E tests for affected apps only
  e2e:
    needs:
      - build
    matrix:
      browser:
        - chrome
        - firefox
    services:
      - postgres:15
    steps:
      - run: pnpm turbo run e2e --filter="..." --parallel=1
    skip_if:
      paths_unmodified:
        - apps/**/src/**
        - apps/**/e2e/**

  # Deploy affected apps to staging
  deploy-staging:
    needs:
      - e2e
    trigger: manual
    steps:
      - run: pnpm turbo run deploy --filter="..." -- --env=staging
# Per-project skip configuration (advanced)
# This is derived from turbo.json plus package.json in each app/lib
# CIGen automatically:
# - Reads turbo.json and workspace package metadata
# - Computes affected projects
# - Only runs jobs for changed projects
# - Generates skip logic based on project dependencies
