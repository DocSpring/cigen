{
  "$id": "https://cigen.dev/schemas/v1/definitions.json",
  "title": "CIGen Shared Definitions",
  "description": "Shared property definitions for CIGen schemas",
  "definitions": {
    "configProperties": {
      "type": "object",
      "properties": {
        "$schema": {
          "type": "string",
          "description": "JSON Schema reference for validation"
        },
        "version": {
          "type": "integer",
          "description": "Schema version",
          "const": 1
        },
        "anchors": {
          "type": "object",
          "description": "YAML anchors for reusing configuration",
          "patternProperties": {
            "^[a-zA-Z_][a-zA-Z0-9_]*$": {}
          }
        },
        "vars": {
          "type": "object",
          "description": "Variables for templating",
          "patternProperties": {
            "^[a-z][a-zA0-9_]*$": {}
          }
        },
        "provider": {
          "type": "string",
          "description": "CI provider to target",
          "enum": ["circleci", "github-actions"]
        },
        "output_path": {
          "type": "string",
          "description": "Path where generated CI config will be written",
          "default": "./build"
        },
        "output_filename": {
          "type": "string",
          "description": "Filename for the generated CI config (useful when splitting workflows)",
          "pattern": "^[^/\\\\]+\\.yml$"
        },
        "caches": {
          "type": "object",
          "description": "Cache backend configuration",
          "properties": {
            "artifacts": {
              "type": "object",
              "description": "File cache for build artifacts",
              "required": ["backend"],
              "properties": {
                "backend": {
                  "type": "string",
                  "enum": ["circleci", "s3", "minio", "redis"]
                },
                "config": {
                  "type": "object",
                  "description": "Backend-specific configuration"
                }
              }
            },
            "job_status": {
              "type": "object",
              "description": "Job status cache for skipping unchanged jobs",
              "required": ["backend"],
              "properties": {
                "backend": {
                  "type": "string",
                  "enum": ["redis", "s3", "dynamodb", "file"]
                },
                "config": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Connection URL (for redis, etc)"
                    }
                  }
                }
              }
            }
          }
        },
        "architectures": {
          "type": "array",
          "description": "Target architectures for multi-arch builds",
          "items": {
            "type": "string",
            "enum": ["amd64", "arm64"]
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "resource_classes": {
          "type": "object",
          "description": "Resource class mapping per architecture",
          "patternProperties": {
            "^(amd64|arm64)$": {
              "type": "object",
              "patternProperties": {
                "^[a-z_]+$": {
                  "type": "string",
                  "description": "Resource class identifier"
                }
              }
            }
          }
        },
        "source_file_groups": {
          "type": "object",
          "description": "Named groups of files for cache key generation",
          "patternProperties": {
            "^[a-z_]+$": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "File path, directory, or reference to another group (e.g., '(rails)')"
              },
              "minItems": 1
            }
          }
        },
        "docker": {
          "type": "object",
          "description": "Docker configuration and authentication",
          "properties": {
            "default_auth": {
              "type": "string",
              "description": "Default auth configuration to use for Docker images"
            },
            "auth": {
              "type": "object",
              "description": "Named Docker registry authentication configurations",
              "patternProperties": {
                "^[a-z_]+$": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "description": "Registry username or environment variable reference"
                    },
                    "password": {
                      "type": "string",
                      "description": "Registry password or environment variable reference"
                    }
                  },
                  "required": ["username", "password"]
                }
              }
            }
          }
        },
        "checkout": {
          "description": "Configure initial git checkout behavior (set to false to skip)",
          "oneOf": [
            { "type": "boolean" },
            {
              "type": "object",
              "properties": {
                "shallow": { "type": "boolean", "default": true },
                "clone_options": { "type": "string" },
                "fetch_options": { "type": "string" },
                "tag_fetch_options": { "type": "string" },
                "keyscan": {
                  "type": "object",
                  "properties": {
                    "github": { "type": "boolean" },
                    "gitlab": { "type": "boolean" },
                    "bitbucket": { "type": "boolean" }
                  },
                  "additionalProperties": false
                },
                "path": { "type": "string" }
              },
              "additionalProperties": false
            }
          ]
        },
        "services": {
          "type": "object",
          "description": "Service container definitions",
          "patternProperties": {
            "^[a-z_]+$": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string",
                  "description": "Docker image for the service"
                },
                "auth": {
                  "type": "string",
                  "description": "Auth configuration name (references docker.auth.*)"
                },
                "environment": {
                  "oneOf": [
                    {
                      "type": "object",
                      "description": "Environment variables as key-value pairs",
                      "patternProperties": {
                        "^[A-Z_]+$": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "array",
                      "description": "Environment variables as array of KEY=value strings",
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                },
                "entrypoint": {
                  "type": "string",
                  "description": "Override the default entrypoint"
                },
                "command": {
                  "type": "string",
                  "description": "Command to run in the container"
                },
                "health_check": {
                  "type": "object",
                  "description": "Health check configuration",
                  "properties": {
                    "command": {
                      "type": "string",
                      "description": "Command to run for health check"
                    },
                    "interval": {
                      "type": "string",
                      "description": "Time between health checks"
                    },
                    "timeout": {
                      "type": "string",
                      "description": "Health check timeout"
                    },
                    "retries": {
                      "type": "integer",
                      "description": "Number of retries before marking unhealthy"
                    }
                  }
                }
              },
              "required": ["image"]
            }
          }
        },
        "graph": {
          "type": "object",
          "description": "Graph visualization settings",
          "properties": {
            "dpi": {
              "type": "integer",
              "description": "DPI for graph output",
              "default": 120,
              "minimum": 50,
              "maximum": 600
            },
            "size": {
              "type": "string",
              "description": "Graph size in inches (width,height)",
              "default": "15,10",
              "pattern": "^\\d+(\\.\\d+)?,\\d+(\\.\\d+)?$"
            },
            "color": {
              "type": "string",
              "description": "Color for graph text and lines",
              "default": "white"
            }
          },
          "additionalProperties": false
        }
      }
    }
  }
}
