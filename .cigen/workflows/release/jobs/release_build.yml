# Dynamic runs-on from matrix
image: ${{ matrix.os }}

strategy:
  fail-fast: false
  matrix:
    include:
      # macOS builds
      - os: macos-latest
        target: x86_64-apple-darwin
        name: cigen-macos-amd64
      - os: macos-latest
        target: aarch64-apple-darwin
        name: cigen-macos-arm64
      # Linux builds
      - os: ubuntu-latest
        target: x86_64-unknown-linux-gnu
        name: cigen-linux-amd64
      - os: ubuntu-latest
        target: aarch64-unknown-linux-gnu
        name: cigen-linux-arm64
        use-cross: true

steps:
  - name: Checkout repository
    uses: actions/checkout@v4
    with:
      fetch-depth: 0
      fetch-tags: true

  - name: Wait for required checks
    uses: actions/github-script@v7
    with:
      script: |
        const script = require('./.github/wait-for-checks.js');
        await script({ github, context, core });

  - name: Install Rust
    uses: dtolnay/rust-toolchain@stable
    with:
      targets: ${{ matrix.target }}

  - name: Install cross (for cross-compilation)
    if: matrix.use-cross
    run: cargo install cross --git https://github.com/cross-rs/cross

  - run:
      name: Build binary
      command: |
        set -e
        if [ "${{ matrix.use-cross }}" = "true" ]; then
          cross build --release --target ${{ matrix.target }} --bin cigen
        else
          cargo build --release --target ${{ matrix.target }} --bin cigen
        fi

  - run:
      name: Create archive
      command: |
        set -e
        cd "target/${{ matrix.target }}/release"
        tar czf "../../../${{ matrix.name }}.tar.gz" cigen
        cd ../../../
        echo "ASSET_PATH=${{ matrix.name }}.tar.gz" >> "$GITHUB_ENV"

  - name: Upload artifact
    uses: actions/upload-artifact@v4
    with:
      name: ${{ matrix.name }}
      path: ${{ env.ASSET_PATH }}
